{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Joshika\\\\OneDrive\\\\Desktop\\\\projs\\\\vscode-portfolio-main\\\\pages\\\\github.jsx\";\nimport Image from 'next/image';\nimport GitHubCalendar from 'react-github-calendar';\nimport RepoCard from '../components/RepoCard';\nimport styles from '../styles/GithubPage.module.css';\n\nconst GithubPage = ({\n  repos,\n  user\n}) => {\n  const theme = {\n    level0: '#161B22',\n    level1: '#0e4429',\n    level2: '#006d32',\n    level3: '#26a641',\n    level4: '#39d353'\n  };\n  const ssc = user.avatar_url;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.user,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: url,\n          className: styles.avatar,\n          alt: user.login,\n          width: 50,\n          height: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: styles.username,\n          children: user.login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [user.public_repos, \" repos\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [user.followers, \" followers\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"6 Latest Updated Repositories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: Object.keys(repos).map(repo => /*#__PURE__*/_jsxDEV(RepoCard, {\n        repo: repo\n      }, repo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.contributions,\n      children: /*#__PURE__*/_jsxDEV(GitHubCalendar, {\n        username: process.env.NEXT_PUBLIC_GITHUB_USERNAME,\n        theme: theme,\n        hideColorLegend: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport async function getStaticProps() {\n  const userRes = await fetch(`https://api.github.com/users/${process.env.NEXT_PUBLIC_GITHUB_USERNAME}`);\n  const user = await userRes.json();\n  const repoRes = await fetch(`https://api.github.com/users/${process.env.NEXT_PUBLIC_GITHUB_USERNAME}/repos?sort=created_at&per_page=6`);\n  const repos = await repoRes.json();\n  return {\n    props: {\n      title: 'GitHub',\n      repos,\n      user\n    },\n    revalidate: 10\n  };\n}\nexport default GithubPage;","map":{"version":3,"sources":["C:/Users/Joshika/OneDrive/Desktop/projs/vscode-portfolio-main/pages/github.jsx"],"names":["Image","GitHubCalendar","RepoCard","styles","GithubPage","repos","user","theme","level0","level1","level2","level3","level4","ssc","avatar_url","url","avatar","login","username","public_repos","followers","container","Object","keys","map","repo","id","contributions","process","env","NEXT_PUBLIC_GITHUB_USERNAME","getStaticProps","userRes","fetch","json","repoRes","props","title","revalidate"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAqB;AACtC,QAAMC,KAAK,GAAG;AACZC,IAAAA,MAAM,EAAE,SADI;AAEZC,IAAAA,MAAM,EAAE,SAFI;AAGZC,IAAAA,MAAM,EAAE,SAHI;AAIZC,IAAAA,MAAM,EAAE,SAJI;AAKZC,IAAAA,MAAM,EAAE;AALI,GAAd;AAOF,QAAMC,GAAG,GAACP,IAAI,CAACQ,UAAf;AACE,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEX,MAAM,CAACG,IAAvB;AAAA,8BACE;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,GAAG,EAAES,GADP;AAEE,UAAA,SAAS,EAAEZ,MAAM,CAACa,MAFpB;AAGE,UAAA,GAAG,EAAEV,IAAI,CAACW,KAHZ;AAIE,UAAA,KAAK,EAAE,EAJT;AAKE,UAAA,MAAM,EAAE;AALV;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAI,UAAA,SAAS,EAAEd,MAAM,CAACe,QAAtB;AAAA,oBAAiCZ,IAAI,CAACW;AAAtC;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAA,+BACE;AAAA,qBAAKX,IAAI,CAACa,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF,eAcE;AAAA,+BACE;AAAA,qBAAKb,IAAI,CAACc,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF,eAoBE;AAAK,MAAA,SAAS,EAAEjB,MAAM,CAACkB,SAAvB;AAAA,gBACGC,MAAM,CAACC,IAAP,CAAYlB,KAAZ,EAAmBmB,GAAnB,CAAwBC,IAAD,iBACtB,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAEA;AAA9B,SAAeA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YApBF,eAyBE;AAAK,MAAA,SAAS,EAAEvB,MAAM,CAACwB,aAAvB;AAAA,6BACE,QAAC,cAAD;AACE,QAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,2BADxB;AAEE,QAAA,KAAK,EAAEvB,KAFT;AAGE,QAAA,eAAe;AAHjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA,kBADF;AAmCD,CA5CD;;AA8CA,OAAO,eAAewB,cAAf,GAAgC;AACrC,QAAMC,OAAO,GAAG,MAAMC,KAAK,CACxB,gCAA+BL,OAAO,CAACC,GAAR,CAAYC,2BAA4B,EAD/C,CAA3B;AAGA,QAAMxB,IAAI,GAAG,MAAM0B,OAAO,CAACE,IAAR,EAAnB;AAEA,QAAMC,OAAO,GAAG,MAAMF,KAAK,CACxB,gCAA+BL,OAAO,CAACC,GAAR,CAAYC,2BAA4B,mCAD/C,CAA3B;AAGA,QAAMzB,KAAK,GAAG,MAAM8B,OAAO,CAACD,IAAR,EAApB;AAEA,SAAO;AACLE,IAAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,QAAT;AAAmBhC,MAAAA,KAAnB;AAA0BC,MAAAA;AAA1B,KADF;AAELgC,IAAAA,UAAU,EAAE;AAFP,GAAP;AAID;AAED,eAAelC,UAAf","sourcesContent":["import Image from 'next/image';\nimport GitHubCalendar from 'react-github-calendar';\nimport RepoCard from '../components/RepoCard';\nimport styles from '../styles/GithubPage.module.css';\n\nconst GithubPage = ({ repos, user }) => {\n  const theme = {\n    level0: '#161B22',\n    level1: '#0e4429',\n    level2: '#006d32',\n    level3: '#26a641',\n    level4: '#39d353',\n  };\nconst ssc=user.avatar_url;\n  return (\n    <>\n      <div className={styles.user}>\n        <div>\n          <Image\n            src={url}\n            className={styles.avatar}\n            alt={user.login}\n            width={50}\n            height={50}\n          />\n          <h3 className={styles.username}>{user.login}</h3>\n        </div>\n        <div>\n          <h3>{user.public_repos} repos</h3>\n        </div>\n        <div>\n          <h3>{user.followers} followers</h3>\n        </div>\n      </div>\n      <h2>6 Latest Updated Repositories</h2>\n      <div className={styles.container}>\n        {Object.keys(repos).map((repo) => (\n          <RepoCard key={repo.id} repo={repo} />\n        ))}\n      </div>\n      <div className={styles.contributions}>\n        <GitHubCalendar\n          username={process.env.NEXT_PUBLIC_GITHUB_USERNAME}\n          theme={theme}\n          hideColorLegend\n        />\n      </div>\n    </>\n  );\n};\n\nexport async function getStaticProps() {\n  const userRes = await fetch(\n    `https://api.github.com/users/${process.env.NEXT_PUBLIC_GITHUB_USERNAME}`\n  );\n  const user = await userRes.json();\n\n  const repoRes = await fetch(\n    `https://api.github.com/users/${process.env.NEXT_PUBLIC_GITHUB_USERNAME}/repos?sort=created_at&per_page=6`\n  );\n  const repos = await repoRes.json();\n\n  return {\n    props: { title: 'GitHub', repos, user },\n    revalidate: 10,\n  };\n}\n\nexport default GithubPage;\n"]},"metadata":{},"sourceType":"module"}